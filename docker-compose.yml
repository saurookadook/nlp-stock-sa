# ###### In case you forget...
# :ro === :readonly
# for each 'ports' entry -> HOST_PORT:CONTAINER_PORT

services:
  all:
    image: alpine
    command: sh -C "echo start"
    platform: linux/amd64
    depends_on:
      - frontend
      - nginx
      - server
      - session-cache

  # TODO: rename this to something better like `pg_database`?
  database:
    image: postgres:16.2-bullseye # higher than this?
    env_file: .env
    environment:
      POSTGRES_PASSWORD: example
    networks:
      - main_app
      - scraper
    platform: linux/amd64
    ports:
      - 5432:5432
    volumes:
      - ./db:/opt/db/scripts
      - db_volume:/var/lib/postgresql/data

  frontend:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: frontend-dev
    env_file: .env
    environment:
      EXAMPLE: woof
    networks:
      - main_app
    platform: linux/amd64
    ports:
      - "8080:8080"
      - "9229:9229"
    volumes:
      - ./app/.yarn:/opt/nlpssa-frontend/.yarn
      - ./app/src/client:/opt/nlpssa-frontend/src/client
      - ./app/src/server:/opt/nlpssa-frontend/src/server
      - ./app/src/types:/opt/nlpssa-frontend/src/types
      - ./app/.yarn.yml:/opt/nlpssa-frontend/.yarn.yml
      - ./app/customTSNodeLoader.js:/opt/nlpssa-frontend/customTSNodeLoader.js
      - ./app/package.json:/opt/nlpssa-frontend/package.json
      - ./app/tsconfig.json:/opt/nlpssa-frontend/tsconfig.json
      - ./app/webpack.config.js:/opt/nlpssa-frontend/webpack.config.js
      - ./app/yarn.lock:/opt/nlpssa-frontend/yarn.lock
      - /opt/nlpssa-frontend/node_modules
      # - ~/.aws:/home/nlpstocksaapp/.aws:ro

  nginx:
    build:
      context: .
      dockerfile: nginx-reverse-proxy/Dockerfile
    links:
      - frontend
      - server
    # network_mode: host
    networks:
      - main_app
      - scraper
    platform: linux/amd64
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-reverse-proxy/conf/:/etc/nginx/conf.d/:ro
      - ./nginx-reverse-proxy/certs/:/etc/nginx/ssl/:ro
      # Assets to be served by NGINX
      - ./app/dist/:/etc/nginx/html/

  server:
    depends_on:
      - database
      - session-cache
    env_file: .env
    environment:
      EXAMPLE: woof
      WORKERS: 1
    build:
      context: .
      dockerfile: server/Dockerfile
      target: server-dev
    networks:
      - main_app
    platform: linux/amd64
    ports:
      - "3000:3000"
    volumes:
      - ./server:/opt/nlp-stock-sa/server
      # - ~/.aws:/home/nlpstocksaapp/.aws:ro

  session-cache:
    image: memcached:1.6.10
    networks:
      - main_app
    platform: linux/amd64
    ports:
      - '11211:11211'

  scraper:
    depends_on:
      - database
      - splash-server
    env_file: .env
    environment:
      EXAMPLE: woof
      WORKERS: 1
    build:
      context: .
      dockerfile: server/Dockerfile
      target: scraper-dev
    networks:
      - scraper
    platform: linux/amd64
    ports:
      - "3001:3001"
    volumes:
      - ./server:/opt/nlp-stock-sa/server
      # - ~/.aws:/home/nlpstocksaapp/.aws:ro

  splash-server:
    # Currently open issue related to this not working on M1 Macs
    # https://github.com/docker/for-mac/issues/7220
    image: scrapinghub/splash:latest
    networks:
      - scraper
    platform: linux/amd64
    ports:
      - "8050:8050"
    volumes:
      - splash:/opt/nlp-stock-sa/scraper/splash

networks:
  main_app:
    driver: bridge
  scraper:
    driver: bridge

volumes:
  db_volume:
  splash:


# frontend-test:
  #   env_file: .env
  #   environment:
  #     ENV: test
  #   build:
  #     context: .
  #     dockerfile: app/Dockerfile
  #     target: frontend-test
